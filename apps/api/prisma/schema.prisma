// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
}

enum Role {
  customer
  event_organizer
}

model User {
  id           Int    @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String @unique
  password     String
  referralCode String @unique

  userDetail   UserDetail? @relation()
  point        Point? @relation()
  reward       Reward? @relation()
  event        Event? @relation()

  @@map("users")
}

model UserDetail {
  id         Int      @id @default(autoincrement())
  birthDate  DateTime? 
  gender     Gender?
  phone      String?
  role       Role     @default(customer)
  isVerified Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userId     Int      @unique
  user       User?    @relation(fields: [userId], references: [id])

  @@map("user_details")
}

model Point {
  id          Int      @id @default(autoincrement())
  totalPoint  BigInt
  earnDate    DateTime?
  expiredDate DateTime?

  userId Int @unique
  user User? @relation(fields: [userId], references: [id])

  @@map("points")
}

model Reward {
  id          Int     @id @default(autoincrement())
  title       String
  nominal     Int

  userId Int @unique
  user User @relation(fields: [userId], references: [id])

  @@map("rewards")
}

model Event {
  id        Int       @id @default(autoincrement())
  title     String
  startDate DateTime
  endDate   DateTime
  location  String
  booked    Int
  isFree    Boolean

  userId Int @unique
  user User?  @relation(fields: [userId], references: [id])
  eventCategoryId Int @unique
  eventCategory EventCategory? @relation(fields: [eventCategoryId], references: [id])

  @@map("events")
}

model EventCategory {
  id            Int    @id @default(autoincrement())
  categoryName  String

  event Event? @relation()
  
  @@map("eventcategories")
}
